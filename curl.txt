curl 'http://localhost:5050/?__r=ac090310-3c09-43ca-9aaa-ee36b18007b3' \
  -H 'Accept: application/json, text/plain, */*' \
  -H 'Accept-Language: en-US,en;q=0.9' \
  -H 'Connection: keep-alive' \
  -H 'Content-Type: application/json' \
  -H 'Origin: http://localhost:3001' \
  -H 'Referer: http://localhost:3001/' \
  -H 'Sec-Fetch-Dest: empty' \
  -H 'Sec-Fetch-Mode: cors' \
  -H 'Sec-Fetch-Site: same-site' \
  -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36' \
  -H 'authtoken: blt043645b976bcde8f' \
  -H 'organization_uid: blt87b0a3aff3fc7a51' \
  -H 'sec-ch-ua: "Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"' \
  -H 'sec-ch-ua-mobile: ?0' \
  -H 'sec-ch-ua-platform: "macOS"' \
  --data-raw $'{"_id":"684a702ed041112e9dc3e1cd","id":"9c92eab88cd04c608cb3d750415ff457","title":"Contentstack Logger","description":"Triggered via HTTP. Creates and publishes a log (entry or asset) via a helper agent. Also classifies the event by ensuring the proper taxonomy and term exist, enabling structured categorization in Contentstack.","active":false,"project_id":"b4c5248357874643aedca7a32ab1c89a","abilities":["15ee0a723b3a46399819117ee7e5230b","1308b1ed854f448e835ce668ec77c2c5","3a6a3b9c65d74834a6408976cc67e14d","f8145e732f074f77817711d3d66bc334"],"auth":"acf809afbb5841bbb79f6ba9406d3139","response_type":"json","randomness":0.6,"user_id":"blt043645b976bcde8f","org_id":"blt87b0a3aff3fc7a51","created_at":"2025-06-12T06:14:06.365Z","updated_at":"2025-07-10T10:35:36.219Z","__v":0,"model_id":"gemini-2.0-flash","provider":"gemini","role_setting":"<AgentBackground>Role:\\nAn AI agent triggered by an HTTP request, responsible for logging the event via a sub-agent and tagging it with the appropriate term from a taxonomy.\\n\\nPurpose:\\nTo support structured classification of logs in Contentstack using taxonomy and term management alongside content creation.\\n\\nContext:\\nWorks with a sub-agent to log data. Uses taxonomy and term management to ensure every log is categorized for better filtering. Operates fully through query-driven HTTP input.\\n\\nAbilities Used:\\nGet All Taxonomies\\nCreate a Taxonomy\\nCreate a Term</AgentBackground>\\n\\n<AgentInstruction>Steps:\\nWait for HTTP request trigger.\\nParse query parameters (e.g., notify=true, event=ping|error|custom)\\nDetermine the event type (event param or fallback to \\"uncategorized\\")\\nCall Get All Taxonomies to check if Event Type taxonomy exists.\\nIf not found, call Create a Taxonomy to create one titled Event Type.\\nThen call Create a Term under Event Type with the event value (e.g., ping, notify).\\n\\nBuild payload:\\ntype: entry or asset (based on notify)\\ncontent: metadata, query string, and term_id\\nCall sub-agent: Contentstack Object Creator\\nReturn final structured response.</AgentInstruction>\\n\\n<AgentOutputFormatting>Format:\\nJSON\\n\\nStructure:\\n\\njson\\nCopy\\nEdit\\n{\\n  \\"status\\": \\"success\\" | \\"error\\",\\n  \\"log_type\\": \\"entry\\" | \\"asset\\",\\n  \\"contentstack_id\\": \\"string\\",\\n  \\"term_id\\": \\"string\\",\\n  \\"message\\": \\"string\\"\\n}\\nExample Success:\\n\\njson\\nCopy\\nEdit\\n{\\n  \\"status\\": \\"success\\",\\n  \\"log_type\\": \\"entry\\",\\n  \\"contentstack_id\\": \\"blt456xyz789abc\\",\\n  \\"term_id\\": \\"trm789abc456def\\",\\n  \\"message\\": \\"Log created and categorized under term \'ping\'.\\"\\n}\\nExample Error:\\n\\njson\\nCopy\\nEdit\\n{\\n  \\"status\\": \\"error\\",\\n  \\"message\\": \\"Failed to create taxonomy or term.\\"\\n}</AgentOutputFormatting>","input_schema":"[{\\"id\\":\\"16ebtcjlq2nj\\",\\"name\\":\\"role\\",\\"description\\":\\"A concise summary of the AI agent’s identity and core specialization.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"5j3ds4nnc5\\",\\"name\\":\\"expertise\\",\\"description\\":\\"Key areas of proficiency relevant to prompt design and AI optimization.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"ze5qpcvsvq\\",\\"name\\":\\"contextualKnowledge\\",\\"description\\":\\"Relevant background or contextual information the agent should know to perform optimally.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"acd5tb3k9bc\\",\\"name\\":\\"objective\\",\\"description\\":\\"A concise statement of the agent\'s primary goal.\\",\\"type\\":\\"string\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"qij6vny06to\\",\\"name\\":\\"stepByStepProcess\\",\\"description\\":\\"Sequential steps the agent must follow during prompt analysis and enhancement.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"mf5nxenritn\\",\\"name\\":\\"bestPractices\\",\\"description\\":\\"A list of prompt design principles the agent should follow.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"8nagn9fxiz3\\",\\"name\\":\\"structure\\",\\"description\\":\\"Specific XML tag layout or formatting structure to follow.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"dwtaejqmo3w\\",\\"name\\":\\"style\\",\\"description\\":\\"Formatting and language guidelines for clarity, tone, and readability.\\",\\"type\\":\\"textarea\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"8ro3arkj5cl\\",\\"name\\":\\"tone\\",\\"description\\":\\"Desired tone of voice for the agent’s response (e.g., formal, instructional, friendly).\\",\\"type\\":\\"select\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[\\"formal\\",\\"professional\\",\\"neutral\\",\\"friendly\\",\\"instructional\\"]},{\\"id\\":\\"v1qoqg16dvc\\",\\"name\\":\\"includeExamples\\",\\"description\\":\\"Whether to show examples in the optimized prompt\\",\\"type\\":\\"boolean\\",\\"isArray\\":false,\\"required\\":false,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"1gjrztegf9s\\",\\"name\\":\\"enableChainOfThought\\",\\"description\\":\\"Whether to encourage step-by-step reasoning\\",\\"type\\":\\"boolean\\",\\"isArray\\":false,\\"required\\":false,\\"nestedProperties\\":[],\\"enumValues\\":[]}]","brandkit":{"enabled":false,"knowledge_vault":false},"provider_options":[{"label":"OpenAI","value":"chatgpt"},{"label":"Vertex AI","value":"vertex"},{"label":"Azure OpenAI","value":"azurechatgpt"},{"label":"Google Gemini","value":"gemini"},{"label":"Anthropic Claude","value":"anthropic"}],"response_types":[{"label":"JSON","value":"json"},{"label":"Text","value":"text"},{"label":"HTML","value":"html"},{"label":"Markdown","value":"markdown"}],"model_options":{"chatgpt":[{"label":"gpt-4-turbo","value":"gpt-4-turbo"},{"label":"gpt-4o","value":"gpt-4o"},{"label":"gpt-4o-mini","value":"gpt-4o-mini"},{"label":"o3-mini","value":"o3-mini"}],"vertex":[{"label":"gemini-1.5-flash","value":"gemini-1.5-flash"},{"label":"gemini-1.5-pro","value":"gemini-1.5-pro"},{"label":"gemini-2.0-flash","value":"gemini-2.0-flash"},{"label":"gemini-2.0-pro-exp-02-05","value":"gemini-2.0-pro-exp-02-05"},{"label":"gemini-2.0-flash-thinking-exp-01-21","value":"gemini-2.0-flash-thinking-exp-01-21"}],"azurechatgpt":[{"label":"MODEL IS CONFIGURED IN AZURE","value":"MODEL IS CONFIGURED IN AZURE"}],"gemini":[{"label":"gemini-1.5-flash","value":"gemini-1.5-flash"},{"label":"gemini-1.5-pro","value":"gemini-1.5-pro"},{"label":"gemini-2.0-flash","value":"gemini-2.0-flash"},{"label":"gemini-2.0-pro-exp-02-05","value":"gemini-2.0-pro-exp-02-05"},{"label":"gemini-2.0-flash-thinking-exp-01-21","value":"gemini-2.0-flash-thinking-exp-01-21"}],"anthropic":[{"label":"claude-3-5-sonnet-latest","value":"claude-3-5-sonnet-latest"},{"label":"claude-3-5-haiku-latest","value":"claude-3-5-haiku-latest"},{"label":"claude-3-opus-latest","value":"claude-3-opus-latest"}]},"trigger":{"id":"9e081786c3f44ac09dcfb58f57d9a416"},"trigger_details":{"id":"9e081786c3f44ac09dcfb58f57d9a416","title":"HTTP Request Trigger","description":"This event is triggered when HTTP GET/POST  requests are made to a webhook URL.","type":"instant","auth":"","project_id":"b4c5248357874643aedca7a32ab1c89a","org_id":"blt87b0a3aff3fc7a51","rule_id":[],"agent_id":["9c92eab88cd04c608cb3d750415ff457"],"trigger_id":"17a4f5c7c31044679c0faaf81ff8d0b6","connector_id":"b170d2f14a864e9cb7fa1cf0a3d3b2f6","input_schema":"{\\n  \\"type\\": \\"object\\",\\n  \\"required\\": [\\n    \\"method\\"\\n  ],\\n  \\"properties\\": {\\n    \\"method\\": {\\n      \\"type\\": \\"string\\",\\n      \\"title\\": \\"Select Method\\",\\n      \\"minLength\\": 3,\\n      \\"default\\": \\"GET/POST\\",\\n      \\"enum\\": [\\n        \\"GET/POST\\"\\n      ],\\n      \\"description\\": \\"Select a method.\\"\\n    }\\n  },\\n  \\"prefetch\\": {\\n    \\"lookup\\": \\"prefetch_http_trigger\\"\\n  }\\n}","input_data":"{\\"method\\":\\"GET/POST\\",\\"httpAuth\\":{\\"enable\\":false,\\"key\\":\\"ah-http-key\\",\\"value\\":\\"Q5>buzjwgsoufw\\"}}","meta":"{}","has_func":["constructor","register","unregister"],"user_id":"blt043645b976bcde8f","group_name":"http","trigger_title":"HTTP Request Trigger","tested":false,"skipped":true,"active":true,"version":1,"help":"https://www.contentstack.com/docs/developers/automation-hub-connectors/http-trigger/","note":"","created_at":"2025-07-08T09:14:16.828Z","updated_at":"2025-07-08T09:14:45.844Z","filters":"[]"},"auth_options":[{"id":"cd25eb9fe1f146d586d6832bdad24c07","title":"Contentstack OAuth #1","group_name":"contentstack"},{"id":"05acc1b033ce4253ae4da0925154ca70","title":"Gemini #1","group_name":"gemini"},{"id":"acf809afbb5841bbb79f6ba9406d3139","title":"Gemini #2","group_name":"gemini"},{"id":"1979b72abefe4eaea349069653089906","title":"Gemini #3","group_name":"gemini"}],"output_schema":{"type":"visual","schema":"[{\\"id\\":\\"fvdxt1mc4eb\\",\\"name\\":\\"status\\",\\"description\\":\\"Indicates whether the operation was successful. Possible values: \\\\\\"success\\\\\\" or \\\\\\"error\\\\\\".\\",\\"type\\":\\"enum\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[\\"success\\",\\"error\\"]},{\\"id\\":\\"b0i56modk2w\\",\\"name\\":\\"message\\",\\"description\\":\\"\\\\tA short, human-readable summary of the operation, including success or error information.\\",\\"type\\":\\"string\\",\\"isArray\\":false,\\"required\\":true,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"o6xml0awn1\\",\\"name\\":\\"log_type\\",\\"description\\":\\"The type of content that was created. Either \\\\\\"entry\\\\\\" (for notify logs) or \\\\\\"asset\\\\\\" (for silent pings).\\",\\"type\\":\\"string\\",\\"isArray\\":false,\\"required\\":false,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"6pw9y473z7s\\",\\"name\\":\\"term_id\\",\\"description\\":\\"The ID of the taxonomy term used to categorize the log (e.g., ping, error, etc.).\\",\\"type\\":\\"string\\",\\"isArray\\":false,\\"required\\":false,\\"nestedProperties\\":[],\\"enumValues\\":[]},{\\"id\\":\\"n73jbfeajxr\\",\\"name\\":\\"contentstack_id\\",\\"description\\":\\"The unique identifier of the entry or asset created in Contentstack.\\",\\"type\\":\\"string\\",\\"isArray\\":false,\\"required\\":false,\\"nestedProperties\\":[],\\"enumValues\\":[]}]"},"model":"gemini-2.0-flash"}'